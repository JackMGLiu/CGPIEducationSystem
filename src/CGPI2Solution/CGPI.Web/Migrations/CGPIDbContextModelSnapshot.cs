// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using QJ.Framework.Entity.DbContext;
using System;

namespace CGPI.Web.Migrations
{
    [DbContext(typeof(CGPIDbContext))]
    partial class CGPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.RoleAuthorize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<int>("MenuId");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleAuthorize");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysDict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("DictCode")
                        .HasMaxLength(50);

                    b.Property<string>("DictName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<bool?>("IsNav");

                    b.Property<bool?>("IsTree");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("SortCode");

                    b.HasKey("Id");

                    b.ToTable("SysDict");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysDictDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool?>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("SortCode");

                    b.Property<int>("SysDictId");

                    b.HasKey("Id");

                    b.HasIndex("SysDictId");

                    b.ToTable("SysDictDetail");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .HasMaxLength(50);

                    b.Property<string>("Browser")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Exception")
                        .HasMaxLength(2000);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<string>("IP")
                        .HasMaxLength(50);

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<string>("LogLevel")
                        .HasMaxLength(50);

                    b.Property<string>("Message")
                        .HasMaxLength(2000);

                    b.Property<string>("Operation")
                        .HasMaxLength(50);

                    b.Property<string>("RealName")
                        .HasMaxLength(50);

                    b.Property<string>("Request")
                        .HasMaxLength(200);

                    b.Property<string>("StackTrace")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("SysLog");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("EnCode")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsEdit");

                    b.Property<bool>("IsEnableed");

                    b.Property<bool?>("IsPublic");

                    b.Property<string>("JsEvent")
                        .HasMaxLength(50);

                    b.Property<int?>("Layer");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("SortCode");

                    b.Property<int?>("Type");

                    b.Property<string>("Url")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("SysMenu");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysOrganize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("EnCode")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<int?>("Layer");

                    b.Property<string>("ManagerId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int?>("SortCode");

                    b.Property<string>("TelePhone")
                        .HasMaxLength(50);

                    b.Property<int?>("Type");

                    b.Property<string>("WeChat")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("SysOrganize");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("AllowEdit");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("EnCode")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizeId");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("SortCode");

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OrganizeId");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("AllowEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AllowStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AnswerQuestion")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("CardId")
                        .HasMaxLength(50);

                    b.Property<int?>("CheckOnLine");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("DutyName")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("Gender");

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<string>("HeadIcon")
                        .HasMaxLength(255);

                    b.Property<bool>("HeadIsNew");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LockEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LockStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("LogOnCount");

                    b.Property<string>("MSN")
                        .HasMaxLength(50);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifyUser")
                        .HasMaxLength(50);

                    b.Property<int?>("Nation");

                    b.Property<string>("NickName")
                        .HasMaxLength(50);

                    b.Property<int?>("OrganizeId");

                    b.Property<string>("Origin")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("Political")
                        .HasMaxLength(50);

                    b.Property<string>("QQ")
                        .HasMaxLength(50);

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Secretkey")
                        .HasMaxLength(255);

                    b.Property<string>("Signature")
                        .HasMaxLength(50);

                    b.Property<string>("SimpleSpelling")
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .HasMaxLength(50);

                    b.Property<int?>("UserOnLine");

                    b.Property<int?>("UserType");

                    b.Property<string>("WeChat")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OrganizeId");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.UserAuthorize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<int>("MenuId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAuthorize");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<string>("GuidCode")
                        .IsRequired()
                        .HasColumnName("Guid")
                        .HasMaxLength(36);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableed");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.RoleAuthorize", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysMenu", "Menu")
                        .WithMany("RoleAuthorizes")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QJ.Framework.Entity.Entities.System.SysRole", "Role")
                        .WithMany("RoleAuthorizes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysDictDetail", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysDict", "SysDict")
                        .WithMany("SysDictDetails")
                        .HasForeignKey("SysDictId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysRole", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysOrganize", "Organize")
                        .WithMany("SysRoles")
                        .HasForeignKey("OrganizeId");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.SysUser", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysOrganize", "Department")
                        .WithMany("SysDepUsers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("QJ.Framework.Entity.Entities.System.SysOrganize", "Organize")
                        .WithMany("SysOrgUsers")
                        .HasForeignKey("OrganizeId");
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.UserAuthorize", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysMenu", "Menu")
                        .WithMany("UserAuthorizes")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QJ.Framework.Entity.Entities.System.SysUser", "User")
                        .WithMany("UserAuthorizes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QJ.Framework.Entity.Entities.System.UserRole", b =>
                {
                    b.HasOne("QJ.Framework.Entity.Entities.System.SysRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QJ.Framework.Entity.Entities.System.SysUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
